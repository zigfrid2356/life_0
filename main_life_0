{
   main_life_0
   
   Copyright 2018 Alexandr <Alexandr@MSI>
   
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
   MA 02110-1301, USA.
   
   
}


program untitled;

uses crt;
type
body=record
flag:byte;//0-dead,1-life,2-null;
//x,y:integer;
genom:array[0..63]of integer;
hp,dmg,color:byte;
end;

map=record
kl:array[0..79,0..23]of body;
end;

t_map=record
t1,t2:body;
end;
var 
bot:map;

i_lf:integer;
menu_key:char;

function map_generate(mg:map):map;
var x_mg,y_mg,i_mg,i2_mg:integer;
begin//0
for y_mg:=0 to 23 do begin//1
for x_mg:=0 to 79 do begin//2
i2_mg:=random(10);
if i2_mg=0 then mg.kl[x_mg,y_mg].flag:=0;
if i2_mg=1 then mg.kl[x_mg,y_mg].flag:=1;
if i2_mg>1 then mg.kl[x_mg,y_mg].flag:=2;

if i2_mg=0 then mg.kl[x_mg,y_mg].color:=0;
if i2_mg=1 then mg.kl[x_mg,y_mg].color:=1;
if i2_mg>1 then mg.kl[x_mg,y_mg].color:=2;

mg.kl[x_mg,y_mg].hp:=random(5)+1;
mg.kl[x_mg,y_mg].dmg:=1;
for i_mg:=0 to 63 do begin//3
mg.kl[x_mg,y_mg].genom[i_mg]:=0;end;//3
mg.kl[x_mg,y_mg].genom[0]:=0;
mg.kl[x_mg,y_mg].genom[1]:=random(8);
mg.kl[x_mg,y_mg].genom[2]:=random(1);
mg.kl[x_mg,y_mg].genom[3]:=random(1);
mg.kl[x_mg,y_mg].genom[4]:=random(500)+500;
mg.kl[x_mg,y_mg].genom[5]:=random(1);
end;end;//1//2
map_generate:=mg;
end;//0

procedure map_output(mo:map);
var i_mo,j_mo:integer;
begin//0
for j_mo:=0 to 23 do begin
//writeln();
for i_mo:=0 to 79 do begin
if mo.kl[i_mo,j_mo].color=1 then textcolor(green);
if mo.kl[i_mo,j_mo].color=0 then textcolor(white);
if mo.kl[i_mo,j_mo].color=2 then textcolor(black);
if mo.kl[i_mo,j_mo].color=3 then textcolor(red);
if mo.kl[i_mo,j_mo].color=4 then textcolor(yellow);
if mo.kl[i_mo,j_mo].flag=0 then textcolor(white);
if mo.kl[i_mo,j_mo].flag=2 then textcolor(black);

write('.');{->80,\/24 );}

end;end;
end;//0

function body_work(bw1,bw2:body;i_bw:integer):t_map;//bw1- activ, bw2-passiv
begin
if i_bw<=7 then begin//00
if bw2.flag=2 then begin //0
bw1.genom[0]:=bw1.genom[0]+1;
bw2:=bw1;bw1.flag:=2; end;//0

if (bw2.flag=0) and (bw1.genom[2]=1) then begin //1
bw1.color:=4;bw1.hp:=bw1.hp+1;bw1.genom[0]:=bw1.genom[0]+1;
bw2:=bw1;bw1.flag:=2; end;//1

 if (bw2.flag=1) and (bw1.genom[3]=1) and (bw1.hp>bw2.hp) then begin //2
bw1.color:=3;bw1.hp:=bw1.hp+1;bw1.genom[0]:=bw1.genom[0]+1;
bw2:=bw1;bw1.flag:=2; end;//2

if bw1.genom[0]>bw1.genom[4] then bw1.flag:=0;
if bw2.genom[0]>bw2.genom[4] then bw2.flag:=0;
end;//00

if (i_bw>7)and (bw2.flag=2) and(bw1.genom[5]=1) then begin //000
bw2:=bw1;
bw2.color:=1;
bw2.hp:=bw2.hp+random(500);
bw2.genom[0]:=0;
bw2.genom[4]:=random(5)+5;
end;//000

body_work.t1:=bw1;
body_work.t2:=bw2;
end;


function bot_muve(bm:map):map;
var x_bm,y_bm,i_bm,tx,ty:integer;
bm_t:t_map;
begin//0
for y_bm:=0 to 23 do begin//1
for x_bm:=0 to 79 do begin//2
i_bm:=random(16);
tx:=x_bm;
ty:=y_bm;
if tx-1<=0 then tx:=80;if tx+1>=79 then tx:=1;
if ty-1<=0 then tx:=24;if ty+1>=23 then tx:=1;

//------------0--------------
if (bm.kl[x_bm,y_bm].flag=1)and((i_bm=0)or(i_bm=8))  then begin
bm_t:=body_work(bm.kl[x_bm,y_bm],bm.kl[tx-1,ty-1],i_bm);
bm.kl[x_bm,y_bm]:=bm_t.t1;
bm.kl[tx-1,ty-1]:=bm_t.t2;end;
//------------1--------------
if (bm.kl[x_bm,y_bm].flag=1)and((i_bm=1)or(i_bm=9)) then begin
bm_t:=body_work(bm.kl[x_bm,y_bm],bm.kl[tx,ty-1],i_bm);
bm.kl[x_bm,y_bm]:=bm_t.t1;
bm.kl[x_bm,ty-1]:=bm_t.t2;end;
//------------2--------------
if (bm.kl[x_bm,y_bm].flag=1)and((i_bm=2)or(i_bm=10)) then begin
bm_t:=body_work(bm.kl[x_bm,y_bm],bm.kl[tx+1,ty-1],i_bm);
bm.kl[x_bm,y_bm]:=bm_t.t1;
bm.kl[tx+1,ty-1]:=bm_t.t2;end;
//------------3--------------
if (bm.kl[x_bm,y_bm].flag=1)and((i_bm=3)or(i_bm=11)) then begin
bm_t:=body_work(bm.kl[x_bm,y_bm],bm.kl[tx+1,y_bm],i_bm);
bm.kl[x_bm,y_bm]:=bm_t.t1;
bm.kl[tx+1,y_bm]:=bm_t.t2;end;
//------------4--------------
if (bm.kl[x_bm,y_bm].flag=1)and((i_bm=4)or(i_bm=12)) then begin
bm_t:=body_work(bm.kl[x_bm,y_bm],bm.kl[tx+1,ty+1],i_bm);
bm.kl[x_bm,y_bm]:=bm_t.t1;
bm.kl[tx+1,ty+1]:=bm_t.t2;end; 
//------------5--------------
if (bm.kl[x_bm,y_bm].flag=1)and((i_bm=5)or(i_bm=13)) then begin
bm_t:=body_work(bm.kl[x_bm,y_bm],bm.kl[x_bm,ty+1],i_bm);
bm.kl[x_bm,y_bm]:=bm_t.t1;
bm.kl[x_bm,ty+1]:=bm_t.t2;end; 
//------------6--------------
if (bm.kl[x_bm,y_bm].flag=1)and((i_bm=6)or(i_bm=14)) then begin
bm_t:=body_work(bm.kl[x_bm,y_bm],bm.kl[tx-1,ty+1],i_bm);
bm.kl[x_bm,y_bm]:=bm_t.t1;
bm.kl[tx-1,ty+1]:=bm_t.t2;end; 
//------------7--------------
if (bm.kl[x_bm,y_bm].flag=1)and((i_bm=7)or(i_bm=15)) then begin 
bm_t:=body_work(bm.kl[x_bm,y_bm],bm.kl[tx-1,y_bm],i_bm);
bm.kl[x_bm,y_bm]:=bm_t.t1;
bm.kl[tx-1,y_bm]:=bm_t.t2;end;


end;end;//1//2
bot_muve:=bm;
end;



BEGIN
randomize;
bot:=map_generate(bot);
map_output(bot);

repeat
menu_key:=readkey;
case menu_key of
'1': begin
 ClrScr;
 for i_lf:=0 to 99 do 
 bot:=bot_muve(bot);
map_output(bot);
end;
end;
until menu_key='3';
	readln();	
	
END.

